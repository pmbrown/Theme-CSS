//  ------------------------------------------------------------
//  Restart styles
//  ------------------------------------------------------------

* { 
  margin: 0;
}

*, *::before, *::after {
  box-sizing: border-box;
}

//  ------------------------------------------------------------
//  General typography
//  ------------------------------------------------------------

:where(html, body, h1, h2, h3, h4, h5, h6) {
  color: hsl(var(--color));
  font-size: var(--fs);
  font-weight: var(--fw);
  line-height: var(--lh);
}

:where(html) { 
  --fs: clamp(100%, 50% + 0.666vw, 150%);
  --body: 0.969rem;
  --lg: 1.1rem;
  --sm: 0.844rem;
  --sml: 0.797rem;
  --xs: 0.75rem;
  --h1: 1.95rem;
  --h2: 1.6rem;
  --h3: 1.35rem;
  --h4: 1.25rem;
  --h5: 1.15rem;
  --h6: 1rem;
  --color: var(--text);
  --ico: hsl(var(--color));
  font-family: Arial, Helvetica, sans-serif, system-ui, -apple-system;
  background-color: hsl(var(--body-bg));
  height: 100%;
}

:where(body) {
  --fs: var(--body);
  --fw: normal;
  --lh: 1.6;
}

:where(a) {
  --color: hsl(var(--link));
  --hover: hsl(var(--link-hover));
  --visited: hsl(var(--link-visited-light));
  --ico: var(--color);
  color: var(--color);
  overflow-wrap: break-word;
  text-decoration-thickness: 1px;
  text-underline-offset: .1175em;
}

:where(a:is(:hover, :focus)) {
  --ico: var(--hover);
  color: var(--hover);
  text-decoration: none;
}

:where(a:focus-visible) {
  outline: .094rem solid hsl(var(--link-hover));
  outline-offset: .1175rem;
  border-radius: .15em;
}

:where(h1, h2, h3, h4, h5, h6) a {
  text-decoration: none;
}

:where(h1, h2, h3, h4, h5, h6, p, ol, ul, dl, address) {
  margin-block-end: var(--mb);
}

:where(h1, h2, h3, h4, h5, h6) {
  --fw: bold;
  --mb: .75rem;
//  text-wrap: balance;
}

:where(h1) {
  --fs: var(--h1);
  --lh: 1.2;
}

:where(h2) {
  --fs: var(--h2);
  --lh: 1.2;
}

:where(h3) {
  --fs: var(--h3);
  --lh: 1.225;
}

:where(h4) {
  --fs: var(--h4);
  --lh: 1.25;
}

:where(h5) {
  --fs: var(--h5);
  --lh: 1.25;
}

:where(h6) {
  --fs: var(--h6);
  --lh: 1.3;
}

:where(small) {
  font-size: var(--fs);
  --fs: var(--sml); 
}

:where(bold, strong) {
  font-weight: bold;
}

:where(p, ol, ul, dl, address) {
  --mb: 1rem;
  line-height: var(--lh);  
}

:where(ol, ul) {
  --pl: 1.75rem;
  padding-inline-start: var(--pl);
}

:where(ol ol, ul ul, ol ul, ul ol, dl dl) {
  --mb: 0;
}

:where(dt) {
  --fw: bold;
  font-weight: var(--fw);
}

:where(dd) {
  margin-inline-start: 1rem;
}

:where(abbr[title]) {
  border: none;
  cursor: help;
}

:where(sup, sub) {
  font-size: var(--xs);
}

:where(mark) {
  color: marktext;
}

:where(code) {
  color: hsl(var(--link));
  word-wrap: break-word;
}

a > :where(code) {
  color: inherit;
}

:where(pre, code, kbd, samp) {
  font-family: Consolas, SFMono-Regular, monospace;
}

:where(kbd) {
  padding: .1rem .2rem;
  background-color: hsl(var(--surf-2));
  border-radius: .25rem;
}

:where(pre) {
  overflow: auto;
  border: 1px solid hsl(var(--surf-2));
  padding: .5rem;
  margin-block-end: 1rem;
}

:where(pre) code {
  color: revert;
  word-break: normal;
}

:where(address) {
  font-style: normal;
}

:where(blockquote) {
  border: 1px solid hsl(var(--surf-1));
  border-inline-start-width: 10px;
  padding-block: .5rem;
  padding-inline: 1rem;
  margin-block-end: 1rem;
}

:where(blockquote) p {
  margin-block-end: 0;
}

:where(details) {
  margin-block-end: 1rem;
}

:where(summary) {
  font-weight: bold;
  cursor: pointer;
}

:where(details[open] summary) {
  margin-block-end: .5rem;
}

:where(hr) {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
  border: none;
  border-block-start: 1px solid hsl(var(--surf-2));
  margin-block-end: 1rem;
}

:where(figure) {
  margin: 0;
  margin-block-end: 1rem;
}

:where(figcaption) {
  font-size: var(--sml);
  padding-block-start: .5rem;
}

:where(img, svg, video, audio, iframe, embed, object) {
  display: block;
}

:where(img, svg) { 
  max-width: 100%;
}

:where(iframe) {
  border: 0;
}

//  ------------------------------------------------------------
//  Visual styles
//  ------------------------------------------------------------

@media (prefers-reduced-motion: no-preference) { 
  :where(html) { scroll-behavior: smooth; }
}

.vis-hidden {
  position: absolute;
  width: 1px;
	height: 1px;
	margin: -1px;
	overflow: hidden;
	clip: rect(0,0,0,0);
	white-space: nowrap;
}

.hidden {
  display: none;
}

//  ------------------------------------------------------------
//  Forms and buttons
//  ------------------------------------------------------------

:where(input, button, select, optgroup, textarea, [role=button], .btn) {
  --color: inherit;
  --fs: inherit;
  --lh: inherit;
  --btn-pb: .25rem;
  --btn-pi: .5rem;
  --btn-bg: hsl(var(--body-bg));
  --btn-hover: hsl(var(--surf-1));
  --btn-border-color: hsla(var(--text) / .25);
  --btn-radius: .125em;
  --btn-box-shadow: hsl(var(--text));
  --ico: hsl(var(--color));
  color: var(--color);
  font-size: var(--fs);
  font-family: inherit;
  line-height: var(--lh);
  padding-block: var(--btn-pb);
  padding-inline: var(--btn-pi);
  background-color: var(--btn-bg); 
  border: 1px solid var(--btn-border-color);
  border-radius: var(--btn-radius);
}

:where(input, button, select, optgroup, textarea, [role=button]):disabled,
:where([aria-disabled=true]) {
  opacity: 0.65;
  pointer-events: none;
}

// Buttons

:where(button, select, optgroup, [type=button], [type=submit], [type=reset]) {
  cursor: pointer;
}

:where([role=button], .btn) {
  text-align: center;
  text-decoration: none;
  display: inline-block;
}

:where([role=button], .btn):is(:hover,:focus, :active) {
  --color: inherit;
}

:where(button, [type=button], [type=submit], [type=reset], [role=button], .btn):is(:hover, :focus, :active) {
  background-color: var(--btn-hover);
  outline: none;
}

:where(button, [type=button], [type=submit], [type=reset], [role=button], .btn):is(:focus) {
  box-shadow: 0 0 0 0.12rem var(--btn-box-shadow);
}

:where(button, [type=button], [type=submit], [type=reset], [role=button], .btn):focus:not(:focus-visible) {
  box-shadow: none;
  background-color: var(--btn-bg);
}
  
:where(button, [type=button], [type=submit], [type=reset], [role=button], .btn):focus:not(:focus-visible):hover {
  background-color: var(--btn-hover);
}

:where(.btn-xs) {
  --fs: var(--xs);
  --btn-pb: .2rem;
  --btn-pi: .5rem;
}

:where(.btn-sm) {
  --fs: var(--sm);
  --btn-pb: .2rem;
  --btn-pi: .5rem;
}

:where(.btn-lg) {
  --fs: var(--h6);
  --btn-pb: .35rem;
  --btn-pi: .75rem;
}

:where(.btn-xl) {
  --fs: var(--h5);
  --btn-pb: .5rem;
  --btn-pi: 1rem;
}

[type=submit], .btn-blue {
  --color: hsl(var(--white));
  --ico: var(--color);
  --btn-bg: hsl(var(--blue));
  --btn-hover: hsla(var(--blue) / .75);
  --btn-border-color: hsla(var(--blue) / .25);
  --btn-box-shadow: hsl(var(--blue));
}

[type=reset], .btn-red {
  --color: hsl(var(--white));
  --ico: var(--color);
  --btn-bg: hsl(var(--red));
  --btn-hover: hsla(var(--red) / .75);
  --btn-border-color: hsla(var(--red) / .25);
  --btn-box-shadow: hsl(var(--red));
}

.btn-green {
  --color: hsl(var(--white));
  --ico: var(--color);
  --btn-bg: hsl(var(--green));
  --btn-hover: hsla(var(--green) / .75);
  --btn-border-color: hsla(var(--green) / .25);
  --btn-box-shadow: hsl(var(--green));
}

.btn-orange {
  --color: hsl(var(--black));
  --ico: var(--color);
  --btn-bg: hsl(var(--orange));
  --btn-hover: hsla(var(--orange) / .85);
  --btn-border-color: hsla(var(--orange) / .25);
  --btn-box-shadow: hsl(var(--orange));
}

.btn-dark {
  --color: hsl(var(--white));
  --ico: var(--color);
  --btn-bg: hsl(var(--theme-hs) 25%);
  --btn-hover: hsl(var(--theme-hs) 32%);
  --btn-border-color: hsl(var(--theme-hs) 25%);
  --btn-box-shadow: hsl(var(--theme-hs) 35%);
}

.btn-light {
  --color: hsl(var(--black));
  --ico: var(--color);
  --btn-bg: hsl(var(--theme-hs) 90%);
  --btn-hover: hsl(var(--theme-hs) 85%);
  --btn-border-color: hsl(var(--theme-hs) 90%);
  --btn-box-shadow: hsl(var(--theme-hs) 80%);
}

// Forms

:where(textarea) {
  resize: vertical;
}

::-webkit-input-placeholder {
  font-size: var(--sml);
  color: var(--color);
  opacity: .5;
}

:where([type=radio], [type=checkbox], [type=range], [progress]) {
  accent-color: hsl(var(--link));
}

:where(select) {
  font-size: var(--sm);
  background-color: hsl(var(--body-bg));
  word-wrap: normal;
  padding: .45rem .25rem;
}

:where(fieldset, legend) {
  border: 1px solid hsla(var(--text) / .25);
  border-radius: .125em;
}

:where(fieldset) {
  margin-block-end: 1rem;  
}

:where(legend) {
  font-size: var(--sm);
  margin-block-end: .25rem;
  padding-block: .15rem;
  padding-inline: .5rem;
}

:where([type=color]) {
  cursor: pointer;
  padding: 0;
}

:where(input[type=color])::-webkit-color-swatch-wrapper {
  padding: 0;
}

:where(input[type=color i])::-webkit-color-swatch {
  border-color: hsl(var(--surf-2));
}

:where(input, textarea, select):-webkit-autofill {
  border: 1px solid hsla(var(--text) / .25);
  -webkit-text-fill-color: hsl(var(--text));
  -webkit-box-shadow: 0 0 0 1rem hsl(var(--body-bg)) inset;
}

//  ------------------------------------------------------------
//  Tables
//  ------------------------------------------------------------

:where(table) {
  --table-thead-txt: hsl(var(--text));
  --table-thead-bg: hsla(var(--surf-2) / .5);
  --table-stripes: hsla(var(--surf-1) / .4);
  --table-hover: hsla(var(--surf-1) / .65);
  --table-border-color: hsl(var(--surf-2));
  --table-border-width: 0.0125rem;
  --table-pb: .35rem;
  --table-pi: .65rem;
  --table-mb: 1rem;
  caption-side: top;
  border-collapse: collapse;
  width: 100%;
  margin-block-end: var(--table-mb);
  font-variant-numeric: tabular-nums;
}

:where(caption) {
  font-weight: bold;
  text-align: left;
  padding-block-end: .5rem;
}

:where(thead) th {
  color: var(--table-thead-txt);
  background-color: var(--table-thead-bg);
}

:where(thead) th:last-child {
  border-inline-end-color: var(--table-border-color);
}

:where(th) {
  font-weight: bold;
  text-align: inherit;
  text-align: -webkit-match-parent;
}

:where(thead, tbody, tfoot, tr, td, th) {
  border: var(--table-border-width) solid var(--table-border-color);
  vertical-align: top;
}

:where(tbody, thead) th, td {
  padding-block: var(--table-pb);
  padding-inline: var(--table-pi);
  white-space: nowrap;
}

//  ------------------------------------------------------------
//  Table striped and hover utilities
//  ------------------------------------------------------------

:where(.table-striped tr):nth-child(even),
:where(.table-combo tr):nth-child(even) {
  background-color: var(--table-stripes);
}

:where(.table-hover tbody tr):hover,
:where(.table-combo tbody tr):hover {
  background-color: var(--table-hover);
}

//  ------------------------------------------------------------
//  Table <div> wrapper (see method below)
//  ------------------------------------------------------------
:where([role="region"][aria-labelledby][tabindex]) {
  --mb: 1rem;
  overflow-x: auto;
  margin-block-end: var(--mb);
}

:where([role="region"][aria-labelledby][tabindex]):focus {
  outline: 3px solid hsla(var(--link) / 0.5);
}

:where([role="region"][aria-labelledby][tabindex] table) {
  --table-mb: 0;
}

//  ------------------------------------------------------------
//  Wrapper overflow HTML example
//  ------------------------------------------------------------
//  <div role="region" aria-labelledby="Caption1" tabindex="0">
//  <table class="table-combo">
//  <caption id="Caption1">Table caption</caption>
//    table-data
//  </table>
//  </div>





